{"version":3,"file":"static/js/302.30b0c317.chunk.js","mappings":"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","sources":["components/edit-profile/index.tsx","components/tag-select/index.tsx"],"sourcesContent":["import { Form, Input, Typography } from 'antd';\r\nimport { useContext } from 'react';\r\nimport { USER_TYPE } from '../../constants';\r\nimport { UserContext } from '../../contexts/UserContext';\r\nimport { User } from '../../fake-apis/user-apis';\r\nimport TagSelect from '../tag-select';\r\n\r\nimport './styles.scss';\r\n\r\ninterface EditJobProps {\r\n    editProfileFormData: Partial<User & { confirmPassword: string }>;\r\n    setEditProfileFormData: React.Dispatch<React.SetStateAction<Partial<User>>>;\r\n}\r\n\r\nconst EditJob: React.FC<EditJobProps> = ({\r\n    editProfileFormData,\r\n    setEditProfileFormData,\r\n}) => {\r\n    const onChangeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setEditProfileFormData((prevData) => ({\r\n            ...prevData,\r\n            [e.target.name]: e.target.value,\r\n        }));\r\n    };\r\n    const { currentUser } = useContext(UserContext);\r\n    const isRecruiter: boolean =\r\n        currentUser?.userDetails.type === USER_TYPE.RECRUITER;\r\n\r\n    const onUserDetailsChangeHandler = (\r\n        e: React.ChangeEvent<HTMLInputElement>\r\n    ) => {\r\n        setEditProfileFormData(\r\n            (prevData) =>\r\n                ({\r\n                    ...prevData,\r\n                    userDetails: {\r\n                        ...prevData.userDetails,\r\n                        [e.target.name]: e.target.value,\r\n                    },\r\n                } as User)\r\n        );\r\n    };\r\n\r\n    const onTagChange = (value: string[]) => {\r\n        setEditProfileFormData(\r\n            (prevData) =>\r\n                ({\r\n                    ...prevData,\r\n                    userDetails: {\r\n                        ...prevData.userDetails,\r\n                        skills: value,\r\n                    },\r\n                } as User)\r\n        );\r\n    };\r\n\r\n    return (\r\n        <section className=\"edit-profile-wrapper\">\r\n            <Typography.Title className=\"title\">Edit Profile</Typography.Title>\r\n            <Form\r\n                name=\"edit-profile\"\r\n                layout=\"vertical\"\r\n                initialValues={{\r\n                    remember: true,\r\n                    name: editProfileFormData.name,\r\n                    email: editProfileFormData.email,\r\n                    companyName: editProfileFormData.userDetails?.companyName,\r\n                    contact: editProfileFormData.userDetails?.contact,\r\n                    githubUsername:\r\n                        editProfileFormData.userDetails?.githubUsername,\r\n                    location: editProfileFormData.userDetails?.location,\r\n                }}\r\n                autoComplete=\"on\"\r\n            >\r\n                <Form.Item label=\"Name\" name=\"name\">\r\n                    <Input\r\n                        name=\"name\"\r\n                        placeholder=\"* e.g. John Doe\"\r\n                        value={editProfileFormData.name}\r\n                        onChange={onChangeHandler}\r\n                        size=\"large\"\r\n                        required\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item label=\"Email\" name=\"email\">\r\n                    <Input\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        placeholder=\"* e.g. john.doe@xyz.com\"\r\n                        value={editProfileFormData.email}\r\n                        onChange={onChangeHandler}\r\n                        size=\"large\"\r\n                        required\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item label=\"Company\" name=\"companyName\">\r\n                    <Input\r\n                        name=\"companyName\"\r\n                        placeholder=\"* e.g. Intuit or Paytm\"\r\n                        value={editProfileFormData.userDetails?.companyName}\r\n                        onChange={onUserDetailsChangeHandler}\r\n                        size=\"large\"\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item label=\"Contact\" name=\"contact\">\r\n                    <Input\r\n                        name=\"contact\"\r\n                        placeholder=\"* e.g. 8260602123\"\r\n                        value={editProfileFormData.userDetails?.contact}\r\n                        onChange={onUserDetailsChangeHandler}\r\n                        size=\"large\"\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item label=\"Password\" name=\"password\">\r\n                    <Input.Password\r\n                        type=\"password\"\r\n                        className=\"password-input\"\r\n                        name=\"password\"\r\n                        placeholder=\"Set a password\"\r\n                        minLength={6}\r\n                        value={editProfileFormData.password}\r\n                        onChange={onChangeHandler}\r\n                        size=\"large\"\r\n                        required\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item label=\"Confirm Password\" name=\"confirmPassword\">\r\n                    <Input.Password\r\n                        type=\"password\"\r\n                        className=\"password-input\"\r\n                        name=\"confirmPassword\"\r\n                        placeholder=\"Retype to confirm\"\r\n                        minLength={6}\r\n                        value={editProfileFormData.confirmPassword}\r\n                        onChange={onChangeHandler}\r\n                        size=\"large\"\r\n                        required\r\n                    />\r\n                </Form.Item>\r\n                {!isRecruiter ? (\r\n                    <Form.Item label=\"GitHub Username\" name=\"githubUsername\">\r\n                        <Input\r\n                            name=\"githubUsername\"\r\n                            placeholder=\"* Tell something about the role\"\r\n                            value={\r\n                                editProfileFormData.userDetails?.githubUsername\r\n                            }\r\n                            onChange={onUserDetailsChangeHandler}\r\n                            size=\"large\"\r\n                        />\r\n                    </Form.Item>\r\n                ) : null}\r\n                <Form.Item label=\"Location\" name=\"location\">\r\n                    <Input\r\n                        name=\"location\"\r\n                        placeholder=\"* e.g. Bengaluru or Remote\"\r\n                        value={editProfileFormData.userDetails?.location}\r\n                        onChange={onUserDetailsChangeHandler}\r\n                        size=\"large\"\r\n                    />\r\n                </Form.Item>\r\n                {!isRecruiter ? (\r\n                    <TagSelect\r\n                        onTagChange={onTagChange}\r\n                        defaultValue={editProfileFormData.userDetails?.skills}\r\n                    />\r\n                ) : null}\r\n            </Form>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default EditJob;\r\n","import { Select, Typography } from 'antd';\r\nimport React from 'react';\r\nimport { tagsOptions } from '../../constants';\r\n\r\nimport './styles.scss';\r\n\r\ninterface TagSelectProps {\r\n    onTagChange: (value: string[]) => void;\r\n    defaultValue?: string[];\r\n}\r\n\r\nconst TagSelect: React.FC<TagSelectProps> = ({\r\n    onTagChange,\r\n    defaultValue = [],\r\n}) => {\r\n    const renderOptions = () => {\r\n        return tagsOptions.map((tag) => (\r\n            <Select.Option key={tag}>{tag}</Select.Option>\r\n        ));\r\n    };\r\n\r\n    return (\r\n        <label>\r\n            <Typography.Paragraph>Tags</Typography.Paragraph>\r\n            <Select\r\n                showSearch\r\n                showArrow\r\n                className=\"search-input\"\r\n                defaultValue={defaultValue}\r\n                mode=\"multiple\"\r\n                allowClear\r\n                style={{ width: '100%' }}\r\n                size=\"large\"\r\n                placeholder=\"e.g. css or typescript\"\r\n                onChange={onTagChange}\r\n            >\r\n                {renderOptions()}\r\n            </Select>\r\n        </label>\r\n    );\r\n};\r\n\r\nexport default TagSelect;\r\n"],"names":["editProfileFormData","setEditProfileFormData","onChangeHandler","e","prevData","target","name","value","currentUser","useContext","UserContext","isRecruiter","userDetails","type","USER_TYPE","onUserDetailsChangeHandler","className","layout","initialValues","remember","email","companyName","contact","githubUsername","location","autoComplete","label","placeholder","onChange","size","required","minLength","password","confirmPassword","onTagChange","skills","defaultValue","showSearch","showArrow","mode","allowClear","style","width","tagsOptions","tag"],"sourceRoot":""}