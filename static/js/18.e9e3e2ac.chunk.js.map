{"version":3,"file":"static/js/18.e9e3e2ac.chunk.js","mappings":"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","sources":["fake-apis/user-apis.ts","utils/fake-apis-utils.ts","fake-databases/job-listing.ts","fake-databases/users.ts"],"sourcesContent":["import { USER_TYPE } from '../constants';\r\nimport {\r\n    getLocalStore,\r\n    ERROR,\r\n    fakePromise,\r\n    updateUsersLocalStore,\r\n} from '../utils/fake-apis-utils';\r\n\r\nexport interface User {\r\n    id: string;\r\n    name: string;\r\n    email: string;\r\n    password: string;\r\n    userDetails: {\r\n        type: USER_TYPE;\r\n        contact?: string;\r\n        location: string;\r\n        githubUsername?: string;\r\n        skills?: Array<string>;\r\n        appliedTo?: Array<string>;\r\n        companyName?: string;\r\n    };\r\n}\r\n\r\nexport const getAllUsers = async () => {};\r\n\r\nexport const createUser = async (payload: Partial<User>): Promise<any> => {\r\n    const { usersData } = getLocalStore();\r\n    const user = usersData.find(({ email }) => email === payload.email);\r\n\r\n    if (user) return fakePromise(null, ERROR.USER_EXISTS);\r\n\r\n    const id = `U-${10000 + usersData.length + 1}`;\r\n    const newUserData = { ...payload, id } as User;\r\n    usersData.push(newUserData);\r\n\r\n    await updateUsersLocalStore(usersData);\r\n\r\n    return fakePromise(newUserData);\r\n};\r\n\r\nexport const getAppliedUsers = (applicants: string[]): Promise<User[]> => {\r\n    const applicantsSet = new Set(applicants);\r\n    const { usersData } = getLocalStore();\r\n\r\n    const applicantsOfJob = usersData.filter(({ id }) => applicantsSet.has(id));\r\n    return fakePromise(applicantsOfJob) as Promise<User[]>;\r\n};\r\n\r\nexport const getUser = async (\r\n    userEmail: string,\r\n    userPassword: string\r\n): Promise<any> => {\r\n    const { usersData } = getLocalStore();\r\n    const user = usersData.find(\r\n        ({ email, password }) =>\r\n            email === userEmail && password === userPassword\r\n    );\r\n\r\n    return user\r\n        ? fakePromise(user)\r\n        : fakePromise(null, ERROR.CHECK_CREDENTIALS);\r\n};\r\n\r\nexport const updateUser = async (\r\n    userEmail: string,\r\n    payload: Partial<User>\r\n): Promise<any> => {\r\n    const { usersData } = getLocalStore();\r\n    for (const index in usersData) {\r\n        if (usersData[index].email === userEmail) {\r\n            usersData[index] = {\r\n                ...usersData[index],\r\n                ...payload,\r\n            };\r\n            break;\r\n        }\r\n    }\r\n\r\n    await updateUsersLocalStore(usersData);\r\n\r\n    return fakePromise();\r\n};\r\n\r\nexport const deleteUser = async (userId: string): Promise<any> => {\r\n    return fakePromise();\r\n};\r\n\r\nexport const getUserGitHubRepos = async (\r\n    username: string = ''\r\n): Promise<any> => {\r\n    try {\r\n        const res = await fetch(\r\n            `https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc`\r\n        );\r\n        const data = await res.json();\r\n        if (data.length === 0 || !!data.message) {\r\n            throw new Error(ERROR.INVALID_GITHUB);\r\n        }\r\n        return fakePromise(data);\r\n    } catch (error: any) {\r\n        return fakePromise(null, error.message);\r\n    }\r\n};\r\n","import { LOCAL_STORAGE } from '../constants';\r\nimport { Job } from '../fake-apis/job-listing-apis';\r\nimport { User } from '../fake-apis/user-apis';\r\nimport fakeJobsData from '../fake-databases/job-listing';\r\nimport fakeUsersData from '../fake-databases/users';\r\n\r\nexport const DELAY = 300;\r\n\r\nexport enum ERROR {\r\n    CHECK_CREDENTIALS = 'Please check your credentials.',\r\n    CHECK_FORM_DATA = 'Please fill asterisk(*) marked fields',\r\n    USER_EXISTS = 'This user is already registered.',\r\n    FEATURE_INCOMING = 'Feature on the way!',\r\n    PASSWORD_MISMATCH = 'Password mismatch!',\r\n    INVALID_EMAIL = 'Invalid email!',\r\n    INVALID_GITHUB = 'Invalid GitHut username!',\r\n}\r\n\r\nexport enum SUCCESS {\r\n    JOB_APPLIED = 'Applied!',\r\n    JOB_CREATED = 'Job created!',\r\n    PROFILE_SAVED = 'Profile saved!',\r\n}\r\n\r\nexport const getLocalStore = () => {\r\n    let usersData: User[] = fakeUsersData;\r\n\r\n    const _users: User[] | null = JSON.parse(\r\n        localStorage.getItem(LOCAL_STORAGE._USERS) as any\r\n    );\r\n    if (_users) {\r\n        usersData = _users;\r\n    } else {\r\n        localStorage.setItem(LOCAL_STORAGE._USERS, JSON.stringify(usersData));\r\n    }\r\n    // console.log('configured _users store', usersData);\r\n\r\n    let jobsData: Job[] = fakeJobsData;\r\n\r\n    const _jobs: Job[] | null = JSON.parse(\r\n        localStorage.getItem(LOCAL_STORAGE._JOBS) as any\r\n    );\r\n    if (_jobs) {\r\n        jobsData = _jobs;\r\n    } else {\r\n        localStorage.setItem(LOCAL_STORAGE._JOBS, JSON.stringify(jobsData));\r\n    }\r\n    // console.log('configured _jobs store', jobsData);\r\n\r\n    return { usersData, jobsData };\r\n};\r\n\r\nexport const updateUsersLocalStore = (newUsersData: User[]) => {\r\n    localStorage.setItem(LOCAL_STORAGE._USERS, JSON.stringify(newUsersData));\r\n    return fakePromise('_users update');\r\n};\r\n\r\nexport const updateJobsLocalStore = (newJobsData: Job[]) => {\r\n    localStorage.setItem(LOCAL_STORAGE._JOBS, JSON.stringify(newJobsData));\r\n    return fakePromise('_users update');\r\n};\r\n\r\nexport const fakePromise = (resData: any = null, rejData: any = null) =>\r\n    new Promise((res, rej) => {\r\n        setTimeout(() => {\r\n            if (rejData) rej(rejData);\r\n            else res(resData);\r\n        }, DELAY);\r\n    });\r\n","import { tagsOptions } from '../constants';\r\nimport { Job } from '../fake-apis/job-listing-apis';\r\n\r\nconst generateJobData = () => {\r\n    const companyName: any = [\r\n        'Paytm',\r\n        'Bolt',\r\n        'Intuit',\r\n        'Amazon',\r\n        'Netflix',\r\n        'Google',\r\n        'Apple',\r\n        'Microsoft',\r\n        'Uber',\r\n        'Atlassian',\r\n        'Rippling',\r\n        'Rubrik',\r\n        'Reliance',\r\n        'Cred',\r\n        'Coinbase',\r\n        'Plum',\r\n    ];\r\n    const title: any = [\r\n        'FrontEnd Engineer - II',\r\n        'FrontEnd Engineer - III',\r\n        'Backend Engineer - II',\r\n        'Backend Engineer - III',\r\n        'QA Engineer - II',\r\n        'QA Engineer - III',\r\n        'Devops Engineer - II',\r\n        'Devops Engineer - III',\r\n        'Data Scientist - II',\r\n        'Data Scientist - III',\r\n        'Support Engineer - II',\r\n        'Support Engineer - III',\r\n        'Staff Engineer - II',\r\n        'Staff Engineer - III',\r\n        'CEO',\r\n    ];\r\n    const location: any = [\r\n        'Ranchi',\r\n        'Bengaluru',\r\n        'Mumbai',\r\n        'New York',\r\n        'Pune',\r\n        'Estonia',\r\n        'Singapore',\r\n        'Delhi',\r\n        'Hyderabad',\r\n        'Poland',\r\n        'Warsaw',\r\n        'Pakistan',\r\n        'China',\r\n    ];\r\n    // year month day\r\n    const createdAt: any = [\r\n        [2, 7, 2023],\r\n        [3, 6, 2022],\r\n        [21, 7, 2021],\r\n        [9, 8, 2021],\r\n        [11, 7, 2021],\r\n        [2, 7, 2121],\r\n        [2, 8, 2021],\r\n        [21, 7, 2022],\r\n        [16, 5, 2021],\r\n        [17, 4, 2020],\r\n        [23, 4, 2024],\r\n        [10, 12, 2024],\r\n        [15, 1, 2022],\r\n        [19, 2, 2024],\r\n        [27, 7, 2019],\r\n    ];\r\n    const createdBy: any = ['U-10004', 'U-10005', 'U-10006'];\r\n    const contact: any = [9360602123, 'janedoe@gmail.com', 4660602123];\r\n\r\n    const getRandomNumber = (max: number, min: number = 0): number => {\r\n        return Math.floor(Math.random() * (max - min + 1) + min);\r\n    };\r\n\r\n    const data: Job[] = [];\r\n\r\n    for (let index = 1; index <= 150; index++) {\r\n        const createdByIndex = getRandomNumber(createdBy.length - 1);\r\n        data.push({\r\n            id: `J-${10000 + index}`,\r\n            companyName: companyName[getRandomNumber(companyName.length - 1)],\r\n            title: title[getRandomNumber(title.length - 1)],\r\n            contact: contact[createdByIndex],\r\n            description:\r\n                'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Elit pellentesque habitant morbi tristique senectus et netus. Tristique et egestas quis ipsum suspendisse. In vitae turpis massa sed elementum tempus egestas. Sed faucibus turpis in eu mi bibendum neque egestas. Mattis enim ut tellus elementum sagittis vitae et leo duis. Rhoncus est pellentesque elit ullamcorper dignissim. Faucibus ornare suspendisse sed nisi lacus sed viverra tellus. Vel pharetra vel turpis nunc eget lorem dolor. Ipsum nunc aliquet bibendum enim facilisis. Cursus vitae congue mauris rhoncus. Volutpat maecenas volutpat blandit aliquam. Elit duis tristique sollicitudin nibh sit amet commodo nulla.',\r\n            requirement: '',\r\n            location: location[getRandomNumber(location.length - 1)],\r\n            createdAt: new Date(\r\n                createdAt[getRandomNumber(createdAt.length - 1)].reverse()\r\n            ),\r\n            createdBy: createdBy[createdByIndex],\r\n            salaryRange: [getRandomNumber(9000000, 500000), 9000000],\r\n            tags: tagsOptions.slice(\r\n                getRandomNumber(tagsOptions.length - 1),\r\n                getRandomNumber(\r\n                    tagsOptions.length - 1,\r\n                    Math.floor((tagsOptions.length - 1) / 2)\r\n                )\r\n            ),\r\n            applicants: ['U-10003'],\r\n        });\r\n    }\r\n\r\n    return data;\r\n};\r\n\r\n// const jobListing: Job[] = [\r\n//     {\r\n//         id: 'J-10001',\r\n//         companyName: 'Intuit',\r\n//         title: 'Frontend Engineer - II',\r\n//         description:\r\n//             'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Elit pellentesque habitant morbi tristique senectus et netus. Tristique et egestas quis ipsum suspendisse. In vitae turpis massa sed elementum tempus egestas. Sed faucibus turpis in eu mi bibendum neque egestas. Mattis enim ut tellus elementum sagittis vitae et leo duis. Rhoncus est pellentesque elit ullamcorper dignissim. Faucibus ornare suspendisse sed nisi lacus sed viverra tellus. Vel pharetra vel turpis nunc eget lorem dolor. Ipsum nunc aliquet bibendum enim facilisis. Cursus vitae congue mauris rhoncus. Volutpat maecenas volutpat blandit aliquam. Elit duis tristique sollicitudin nibh sit amet commodo nulla.',\r\n//         requirement: '',\r\n//         location: 'Bengaluru',\r\n//         createdAt: new Date('11/07/2022'),\r\n//         createdBy: 'U-10004',\r\n//         salaryRange: [0, 9000000],\r\n//         tags: [\r\n//             'CSS',\r\n//             'HTML',\r\n//             'Javascript',\r\n//             'React.js',\r\n//             'Typescript',\r\n//             'Next.js',\r\n//             'Ruby',\r\n//         ],\r\n//         applicants: ['U-10001', 'U-10002', 'U-10003'],\r\n//     },\r\n//     {\r\n//         id: 'J-10002',\r\n//         companyName: 'Rippling',\r\n//         title: 'Frontend Engineer - II',\r\n//         description:\r\n//             'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Elit pellentesque habitant morbi tristique senectus et netus. Tristique et egestas quis ipsum suspendisse. In vitae turpis massa sed elementum tempus egestas. Sed faucibus turpis in eu mi bibendum neque egestas. Mattis enim ut tellus elementum sagittis vitae et leo duis. Rhoncus est pellentesque elit ullamcorper dignissim. Faucibus ornare suspendisse sed nisi lacus sed viverra tellus. Vel pharetra vel turpis nunc eget lorem dolor. Ipsum nunc aliquet bibendum enim facilisis. Cursus vitae congue mauris rhoncus. Volutpat maecenas volutpat blandit aliquam. Elit duis tristique sollicitudin nibh sit amet commodo nulla.',\r\n//         requirement: '',\r\n//         location: 'Bengaluru',\r\n//         createdAt: new Date('12/07/2022'),\r\n//         createdBy: 'U-10004',\r\n//         salaryRange: [3000000, 9000000],\r\n//         tags: [\r\n//             'CSS',\r\n//             'HTML',\r\n//             'Javascript',\r\n//             'React.js',\r\n//             'Typescript',\r\n//             'Next.js',\r\n//         ],\r\n//         applicants: ['U-10003'],\r\n//     },\r\n//     {\r\n//         id: 'J-10003',\r\n//         companyName: 'Amazon',\r\n//         title: 'Frontend Engineer - II',\r\n//         description:\r\n//             'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Elit pellentesque habitant morbi tristique senectus et netus. Tristique et egestas quis ipsum suspendisse. In vitae turpis massa sed elementum tempus egestas. Sed faucibus turpis in eu mi bibendum neque egestas. Mattis enim ut tellus elementum sagittis vitae et leo duis. Rhoncus est pellentesque elit ullamcorper dignissim. Faucibus ornare suspendisse sed nisi lacus sed viverra tellus. Vel pharetra vel turpis nunc eget lorem dolor. Ipsum nunc aliquet bibendum enim facilisis. Cursus vitae congue mauris rhoncus. Volutpat maecenas volutpat blandit aliquam. Elit duis tristique sollicitudin nibh sit amet commodo nulla.',\r\n//         requirement: '',\r\n//         location: 'Bengaluru',\r\n//         createdAt: new Date('01/07/2022'),\r\n//         createdBy: 'U-10005',\r\n//         salaryRange: [6000000, 9000000],\r\n//         tags: [\r\n//             'CSS',\r\n//             'HTML',\r\n//             'Javascript',\r\n//             'React.js',\r\n//             'Typescript',\r\n//             'Next.js',\r\n//         ],\r\n//         applicants: [],\r\n//     },\r\n//     {\r\n//         id: 'J-10004',\r\n//         companyName: 'Google',\r\n//         title: 'Frontend Engineer - II',\r\n//         description:\r\n//             'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Elit pellentesque habitant morbi tristique senectus et netus. Tristique et egestas quis ipsum suspendisse. In vitae turpis massa sed elementum tempus egestas. Sed faucibus turpis in eu mi bibendum neque egestas. Mattis enim ut tellus elementum sagittis vitae et leo duis. Rhoncus est pellentesque elit ullamcorper dignissim. Faucibus ornare suspendisse sed nisi lacus sed viverra tellus. Vel pharetra vel turpis nunc eget lorem dolor. Ipsum nunc aliquet bibendum enim facilisis. Cursus vitae congue mauris rhoncus. Volutpat maecenas volutpat blandit aliquam. Elit duis tristique sollicitudin nibh sit amet commodo nulla.',\r\n//         requirement: '',\r\n//         location: 'Bengaluru',\r\n//         createdAt: new Date('10/07/2022'),\r\n//         createdBy: 'U-10006',\r\n//         salaryRange: [0, 9000000],\r\n//         tags: [\r\n//             'CSS',\r\n//             'HTML',\r\n//             'Javascript',\r\n//             'React.js',\r\n//             'Typescript',\r\n//             'Next.js',\r\n//             'Ruby',\r\n//         ],\r\n//         applicants: [],\r\n//     },\r\n//     {\r\n//         id: 'J-10005',\r\n//         companyName: 'Bolt',\r\n//         title: 'Frontend Engineer - II',\r\n//         description:\r\n//             'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Elit pellentesque habitant morbi tristique senectus et netus. Tristique et egestas quis ipsum suspendisse. In vitae turpis massa sed elementum tempus egestas. Sed faucibus turpis in eu mi bibendum neque egestas. Mattis enim ut tellus elementum sagittis vitae et leo duis. Rhoncus est pellentesque elit ullamcorper dignissim. Faucibus ornare suspendisse sed nisi lacus sed viverra tellus. Vel pharetra vel turpis nunc eget lorem dolor. Ipsum nunc aliquet bibendum enim facilisis. Cursus vitae congue mauris rhoncus. Volutpat maecenas volutpat blandit aliquam. Elit duis tristique sollicitudin nibh sit amet commodo nulla.',\r\n//         requirement: '',\r\n//         location: 'Bengaluru',\r\n//         createdAt: new Date('12/06/2022'),\r\n//         createdBy: 'U-10005',\r\n//         salaryRange: [7050000, 9000000],\r\n//         tags: [\r\n//             'CSS',\r\n//             'HTML',\r\n//             'Javascript',\r\n//             'React.js',\r\n//             'Typescript',\r\n//             'Next.js',\r\n//             'Dart',\r\n//         ],\r\n//         applicants: [],\r\n//     },\r\n//     {\r\n//         id: 'J-10006',\r\n//         companyName: 'Intuit',\r\n//         title: 'Frontend Engineer - II',\r\n//         description:\r\n//             'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Elit pellentesque habitant morbi tristique senectus et netus. Tristique et egestas quis ipsum suspendisse. In vitae turpis massa sed elementum tempus egestas. Sed faucibus turpis in eu mi bibendum neque egestas. Mattis enim ut tellus elementum sagittis vitae et leo duis. Rhoncus est pellentesque elit ullamcorper dignissim. Faucibus ornare suspendisse sed nisi lacus sed viverra tellus. Vel pharetra vel turpis nunc eget lorem dolor. Ipsum nunc aliquet bibendum enim facilisis. Cursus vitae congue mauris rhoncus. Volutpat maecenas volutpat blandit aliquam. Elit duis tristique sollicitudin nibh sit amet commodo nulla.',\r\n//         requirement: '',\r\n//         location: 'Bengaluru',\r\n//         createdAt: new Date('12/07/2021'),\r\n//         createdBy: 'U-10005',\r\n//         salaryRange: [3000000, 9000000],\r\n//         tags: [\r\n//             'CSS',\r\n//             'HTML',\r\n//             'Javascript',\r\n//             'React.js',\r\n//             'Typescript',\r\n//             'Next.js',\r\n//         ],\r\n//         applicants: [],\r\n//     },\r\n//     {\r\n//         id: 'J-10007',\r\n//         companyName: 'Netflix',\r\n//         title: 'Frontend Engineer - II',\r\n//         description:\r\n//             'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Elit pellentesque habitant morbi tristique senectus et netus. Tristique et egestas quis ipsum suspendisse. In vitae turpis massa sed elementum tempus egestas. Sed faucibus turpis in eu mi bibendum neque egestas. Mattis enim ut tellus elementum sagittis vitae et leo duis. Rhoncus est pellentesque elit ullamcorper dignissim. Faucibus ornare suspendisse sed nisi lacus sed viverra tellus. Vel pharetra vel turpis nunc eget lorem dolor. Ipsum nunc aliquet bibendum enim facilisis. Cursus vitae congue mauris rhoncus. Volutpat maecenas volutpat blandit aliquam. Elit duis tristique sollicitudin nibh sit amet commodo nulla.',\r\n//         requirement: '',\r\n//         location: 'Bengaluru',\r\n//         createdAt: new Date('18/07/2022'),\r\n//         createdBy: 'U-10006',\r\n//         salaryRange: [0, 9000000],\r\n//         tags: [\r\n//             'CSS',\r\n//             'HTML',\r\n//             'Javascript',\r\n//             'React.js',\r\n//             'Typescript',\r\n//             'Next.js',\r\n//         ],\r\n//         applicants: [],\r\n//     },\r\n//     {\r\n//         id: 'J-10008',\r\n//         companyName: 'Apple',\r\n//         title: 'Frontend Engineer - II',\r\n//         description:\r\n//             'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Elit pellentesque habitant morbi tristique senectus et netus. Tristique et egestas quis ipsum suspendisse. In vitae turpis massa sed elementum tempus egestas. Sed faucibus turpis in eu mi bibendum neque egestas. Mattis enim ut tellus elementum sagittis vitae et leo duis. Rhoncus est pellentesque elit ullamcorper dignissim. Faucibus ornare suspendisse sed nisi lacus sed viverra tellus. Vel pharetra vel turpis nunc eget lorem dolor. Ipsum nunc aliquet bibendum enim facilisis. Cursus vitae congue mauris rhoncus. Volutpat maecenas volutpat blandit aliquam. Elit duis tristique sollicitudin nibh sit amet commodo nulla.',\r\n//         requirement: '',\r\n//         location: 'Bengaluru',\r\n//         createdAt: new Date('19/07/2022'),\r\n//         createdBy: 'U-10006',\r\n//         salaryRange: [0, 1000000],\r\n//         tags: [\r\n//             'CSS',\r\n//             'HTML',\r\n//             'Javascript',\r\n//             'React.js',\r\n//             'Typescript',\r\n//             'Next.js',\r\n//         ],\r\n//         applicants: [],\r\n//     },\r\n//     {\r\n//         id: 'J-10009',\r\n//         companyName: 'Zerodha',\r\n//         title: 'Frontend Engineer - II',\r\n//         description:\r\n//             'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Elit pellentesque habitant morbi tristique senectus et netus. Tristique et egestas quis ipsum suspendisse. In vitae turpis massa sed elementum tempus egestas. Sed faucibus turpis in eu mi bibendum neque egestas. Mattis enim ut tellus elementum sagittis vitae et leo duis. Rhoncus est pellentesque elit ullamcorper dignissim. Faucibus ornare suspendisse sed nisi lacus sed viverra tellus. Vel pharetra vel turpis nunc eget lorem dolor. Ipsum nunc aliquet bibendum enim facilisis. Cursus vitae congue mauris rhoncus. Volutpat maecenas volutpat blandit aliquam. Elit duis tristique sollicitudin nibh sit amet commodo nulla.',\r\n//         requirement: '',\r\n//         location: 'Bengaluru',\r\n//         createdAt: new Date('22/07/2022'),\r\n//         createdBy: 'U-10004',\r\n//         salaryRange: [0, 9000000],\r\n//         tags: [\r\n//             'CSS',\r\n//             'HTML',\r\n//             'Javascript',\r\n//             'React.js',\r\n//             'Typescript',\r\n//             'Next.js',\r\n//             'Ruby',\r\n//         ],\r\n//         applicants: [],\r\n//     },\r\n//     {\r\n//         id: 'J-10010',\r\n//         companyName: 'Tekion',\r\n//         title: 'Frontend Engineer - II',\r\n//         description:\r\n//             'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Elit pellentesque habitant morbi tristique senectus et netus. Tristique et egestas quis ipsum suspendisse. In vitae turpis massa sed elementum tempus egestas. Sed faucibus turpis in eu mi bibendum neque egestas. Mattis enim ut tellus elementum sagittis vitae et leo duis. Rhoncus est pellentesque elit ullamcorper dignissim. Faucibus ornare suspendisse sed nisi lacus sed viverra tellus. Vel pharetra vel turpis nunc eget lorem dolor. Ipsum nunc aliquet bibendum enim facilisis. Cursus vitae congue mauris rhoncus. Volutpat maecenas volutpat blandit aliquam. Elit duis tristique sollicitudin nibh sit amet commodo nulla.',\r\n//         requirement: '',\r\n//         location: 'Bengaluru',\r\n//         createdAt: new Date('02/07/2022'),\r\n//         createdBy: 'U-10006',\r\n//         salaryRange: [0, 9000000],\r\n//         tags: [\r\n//             'CSS',\r\n//             'HTML',\r\n//             'Javascript',\r\n//             'React.js',\r\n//             'Typescript',\r\n//             'Next.js',\r\n//         ],\r\n//         applicants: [],\r\n//     },\r\n// ];\r\nconst jobListing: Job[] = generateJobData();\r\n\r\nexport default jobListing;\r\n","import { USER_TYPE } from '../constants';\r\nimport { User } from '../fake-apis/user-apis';\r\n\r\nconst users: User[] = [\r\n    {\r\n        id: 'U-10001',\r\n        name: 'Subham Raj',\r\n        email: 'subhamraj@gmail.com',\r\n        password: '123456',\r\n        userDetails: {\r\n            type: USER_TYPE.CANDIDATE,\r\n            contact: '8160602123',\r\n            location: 'Bengaluru',\r\n            githubUsername: 'faxmachin3',\r\n            skills: ['JAVA', 'HTML'],\r\n            appliedTo: ['J-10001'],\r\n            companyName: 'Paytm',\r\n        },\r\n    },\r\n    {\r\n        id: 'U-10002',\r\n        name: 'Akash Sharma',\r\n        email: 'akashsharma@gmail.com',\r\n        password: '123456',\r\n        userDetails: {\r\n            type: USER_TYPE.CANDIDATE,\r\n            contact: '9160602123',\r\n            location: 'Bengaluru',\r\n            githubUsername: '',\r\n            skills: ['JAVA', 'Angular.js', 'UI'],\r\n            appliedTo: ['J-10001'],\r\n            companyName: 'Zerodha',\r\n        },\r\n    },\r\n    {\r\n        id: 'U-10003',\r\n        name: 'Prince Raj',\r\n        email: 'princeraj@gmail.com',\r\n        password: '123456',\r\n        userDetails: {\r\n            type: USER_TYPE.CANDIDATE,\r\n            contact: '7260602123',\r\n            location: 'Bengaluru',\r\n            githubUsername: '',\r\n            skills: ['Javascript'],\r\n            appliedTo: ['J-10001', 'J-10002'],\r\n            companyName: 'Intuit',\r\n        },\r\n    },\r\n    {\r\n        id: 'U-10004',\r\n        name: 'John Doe',\r\n        email: 'jhondoe@gmail.com',\r\n        password: '123456',\r\n        userDetails: {\r\n            type: USER_TYPE.RECRUITER,\r\n            contact: '9360602123',\r\n            location: 'Bengaluru',\r\n            companyName: 'Intuit',\r\n        },\r\n    },\r\n    {\r\n        id: 'U-10005',\r\n        name: 'Jane Doe',\r\n        email: 'janedoe@gmail.com',\r\n        password: '123456',\r\n        userDetails: {\r\n            type: USER_TYPE.RECRUITER,\r\n            contact: 'janedoe@gmail.com',\r\n            location: 'Bengaluru',\r\n            companyName: 'Bolt',\r\n        },\r\n    },\r\n    {\r\n        id: 'U-10006',\r\n        name: 'John Cena',\r\n        email: 'jhoncena@gmail.com',\r\n        password: '123456',\r\n        userDetails: {\r\n            type: USER_TYPE.RECRUITER,\r\n            contact: '4660602123',\r\n            location: 'Bengaluru',\r\n            companyName: 'Rippling',\r\n        },\r\n    },\r\n];\r\n\r\nexport default users;\r\n"],"names":["createUser","payload","getLocalStore","usersData","find","email","fakePromise","ERROR","id","length","newUserData","push","updateUsersLocalStore","getAppliedUsers","applicants","applicantsSet","Set","applicantsOfJob","filter","has","getUser","userEmail","userPassword","user","password","updateUser","index","getUserGitHubRepos","username","fetch","res","json","data","message","Error","SUCCESS","jobListing","companyName","title","location","createdAt","createdBy","contact","getRandomNumber","max","min","Math","floor","random","createdByIndex","description","requirement","Date","reverse","salaryRange","tags","tagsOptions","generateJobData","name","userDetails","type","USER_TYPE","githubUsername","skills","appliedTo","fakeUsersData","_users","JSON","parse","localStorage","getItem","LOCAL_STORAGE","setItem","stringify","jobsData","fakeJobsData","_jobs","newUsersData","updateJobsLocalStore","newJobsData","resData","rejData","Promise","rej","setTimeout"],"sourceRoot":""}