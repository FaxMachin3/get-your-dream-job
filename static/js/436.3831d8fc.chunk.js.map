{"version":3,"file":"static/js/436.3831d8fc.chunk.js","mappings":"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","sources":["components/create-job/index.tsx","components/tag-select/index.tsx","../node_modules/shallowequal/index.js"],"sourcesContent":["import { Form, Input, Typography, Slider, Alert } from 'antd';\r\nimport { _16KB } from '../../constants';\r\nimport { Job } from '../../fake-apis/job-listing-apis';\r\nimport TagSelect from '../tag-select';\r\n\r\nimport './styles.scss';\r\n\r\ninterface CreateJobProps {\r\n    jobFormData: Partial<Job>;\r\n    setJobFormData: React.Dispatch<React.SetStateAction<Partial<Job>>>;\r\n}\r\n\r\nconst CreateJob: React.FC<CreateJobProps> = ({\r\n    jobFormData,\r\n    setJobFormData,\r\n}) => {\r\n    const onChangeHandler = (\r\n        e:\r\n            | React.ChangeEvent<HTMLInputElement>\r\n            | React.ChangeEvent<HTMLTextAreaElement>\r\n    ) => {\r\n        setJobFormData((prevData) => ({\r\n            ...prevData,\r\n            [e.target.name]: e.target.value,\r\n        }));\r\n    };\r\n\r\n    const onTagChange = (value: string[]) => {\r\n        setJobFormData((prevData) => ({\r\n            ...prevData,\r\n            tags: value,\r\n        }));\r\n    };\r\n\r\n    const onSliderChange = (value: [number, number]) => {\r\n        setJobFormData((prevData) => ({\r\n            ...prevData,\r\n            salaryRange: [value[0] * 100000, value[1] * 100000],\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <section className=\"create-job-wrapper\">\r\n            <Typography.Title className=\"title\">Create Job</Typography.Title>\r\n            <Form\r\n                name=\"create-job\"\r\n                layout=\"vertical\"\r\n                initialValues={{\r\n                    remember: true,\r\n                    companyName: jobFormData.companyName,\r\n                    contact: jobFormData.contact,\r\n                }}\r\n                autoComplete=\"on\"\r\n            >\r\n                <Form.Item label=\"Company\" name=\"companyName\">\r\n                    <Input\r\n                        name=\"companyName\"\r\n                        placeholder=\"* e.g. Intuit or Paytm\"\r\n                        value={jobFormData.companyName}\r\n                        onChange={onChangeHandler}\r\n                        size=\"large\"\r\n                        required\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item label=\"Title\" name=\"title\">\r\n                    <Input\r\n                        name=\"title\"\r\n                        placeholder=\"* e.g. Frontend Engineer\"\r\n                        value={jobFormData.title}\r\n                        onChange={onChangeHandler}\r\n                        size=\"large\"\r\n                        required\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item label=\"Contact\" name=\"contact\">\r\n                    <Input\r\n                        name=\"contact\"\r\n                        placeholder=\"e.g. 8260602123\"\r\n                        value={jobFormData.contact}\r\n                        onChange={onChangeHandler}\r\n                        size=\"large\"\r\n                        required\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    className=\"description-input\"\r\n                    label={\r\n                        <div className=\"description-label\">\r\n                            <span>Description</span>\r\n                            <span className=\"limit\">\r\n                                *\r\n                                {_16KB -\r\n                                    (jobFormData.description\r\n                                        ?.length as number)}{' '}\r\n                                words left\r\n                            </span>\r\n                        </div>\r\n                    }\r\n                    name=\"description\"\r\n                >\r\n                    <Input.TextArea\r\n                        name=\"description\"\r\n                        placeholder=\"* Tell something about the role\"\r\n                        maxLength={_16KB}\r\n                        value={jobFormData.description}\r\n                        onChange={onChangeHandler}\r\n                        size=\"large\"\r\n                        required\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item label=\"Requirement\" name=\"requirement\">\r\n                    <Input.TextArea\r\n                        name=\"requirement\"\r\n                        placeholder=\"* Add requirements for the role\"\r\n                        maxLength={_16KB}\r\n                        value={jobFormData.requirement}\r\n                        onChange={onChangeHandler}\r\n                        size=\"large\"\r\n                        required\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item label=\"Location\" name=\"location\">\r\n                    <Input\r\n                        name=\"location\"\r\n                        placeholder=\"* e.g. Bengaluru or Remote\"\r\n                        value={jobFormData.location}\r\n                        onChange={onChangeHandler}\r\n                        size=\"large\"\r\n                        required\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item label=\"Salary Range\">\r\n                    <Slider\r\n                        range\r\n                        defaultValue={[45, 70]}\r\n                        onChange={onSliderChange}\r\n                        tooltip={{\r\n                            formatter: (value) => value && `${value}0K`,\r\n                        }}\r\n                    />\r\n                </Form.Item>\r\n                <TagSelect onTagChange={onTagChange} />\r\n            </Form>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default CreateJob;\r\n","import { Select, Typography } from 'antd';\r\nimport React from 'react';\r\nimport { tagsOptions } from '../../constants';\r\n\r\nimport './styles.scss';\r\n\r\ninterface TagSelectProps {\r\n    onTagChange: (value: string[]) => void;\r\n    defaultValue?: string[];\r\n}\r\n\r\nconst TagSelect: React.FC<TagSelectProps> = ({\r\n    onTagChange,\r\n    defaultValue = [],\r\n}) => {\r\n    const renderOptions = () => {\r\n        return tagsOptions.map((tag) => (\r\n            <Select.Option key={tag}>{tag}</Select.Option>\r\n        ));\r\n    };\r\n\r\n    return (\r\n        <label>\r\n            <Typography.Paragraph>Tags</Typography.Paragraph>\r\n            <Select\r\n                showSearch\r\n                showArrow\r\n                className=\"search-input\"\r\n                defaultValue={defaultValue}\r\n                mode=\"multiple\"\r\n                allowClear\r\n                style={{ width: '100%' }}\r\n                size=\"large\"\r\n                placeholder=\"e.g. css or typescript\"\r\n                onChange={onTagChange}\r\n            >\r\n                {renderOptions()}\r\n            </Select>\r\n        </label>\r\n    );\r\n};\r\n\r\nexport default TagSelect;\r\n","//\n\nmodule.exports = function shallowEqual(objA, objB, compare, compareContext) {\n  var ret = compare ? compare.call(compareContext, objA, objB) : void 0;\n\n  if (ret !== void 0) {\n    return !!ret;\n  }\n\n  if (objA === objB) {\n    return true;\n  }\n\n  if (typeof objA !== \"object\" || !objA || typeof objB !== \"object\" || !objB) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);\n\n  // Test for A's keys different from B.\n  for (var idx = 0; idx < keysA.length; idx++) {\n    var key = keysA[idx];\n\n    if (!bHasOwnProperty(key)) {\n      return false;\n    }\n\n    var valueA = objA[key];\n    var valueB = objB[key];\n\n    ret = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;\n\n    if (ret === false || (ret === void 0 && valueA !== valueB)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n"],"names":["jobFormData","setJobFormData","onChangeHandler","e","prevData","target","name","value","className","layout","initialValues","remember","companyName","contact","autoComplete","label","placeholder","onChange","size","required","title","_16KB","description","length","maxLength","requirement","location","range","defaultValue","salaryRange","tooltip","formatter","onTagChange","tags","showSearch","showArrow","mode","allowClear","style","width","tagsOptions","tag","module","exports","objA","objB","compare","compareContext","ret","call","keysA","Object","keys","keysB","bHasOwnProperty","prototype","hasOwnProperty","bind","idx","key","valueA","valueB"],"sourceRoot":""}